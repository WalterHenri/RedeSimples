<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="ColorWindowBackground">#FFF0F0F0</Color>
    <Color x:Key="ColorControlBackground">#FFFFFFFF</Color>
    <Color x:Key="ColorControlHover">#FFDCEAF6</Color>
    <Color x:Key="ColorControlPressed">#FFCDE0F2</Color>
    <Color x:Key="ColorAccent">#FF007ACC</Color>
    <Color x:Key="ColorAccentHover">#FF0099FF</Color>
    <Color x:Key="ColorTextPrimary">#FF1C1C1C</Color>
    <Color x:Key="ColorTextSecondary">#FF6A6A6A</Color>
    <Color x:Key="ColorBorder">#FFCCCCCC</Color>
    <Color x:Key="ColorError">#FFE81123</Color>

    <SolidColorBrush x:Key="BrushWindowBackground" Color="{StaticResource ColorWindowBackground}"/>
    <SolidColorBrush x:Key="BrushControlBackground" Color="{StaticResource ColorControlBackground}"/>
    <SolidColorBrush x:Key="BrushControlHover" Color="{StaticResource ColorControlHover}"/>
    <SolidColorBrush x:Key="BrushControlPressed" Color="{StaticResource ColorControlPressed}"/>
    <SolidColorBrush x:Key="BrushAccent" Color="{StaticResource ColorAccent}"/>
    <SolidColorBrush x:Key="BrushAccentHover" Color="{StaticResource ColorAccentHover}"/>
    <SolidColorBrush x:Key="BrushTextPrimary" Color="{StaticResource ColorTextPrimary}"/>
    <SolidColorBrush x:Key="BrushTextSecondary" Color="{StaticResource ColorTextSecondary}"/>
    <SolidColorBrush x:Key="BrushBorder" Color="{StaticResource ColorBorder}"/>
    <SolidColorBrush x:Key="BrushError" Color="{StaticResource ColorError}"/>

    <Style x:Key="TitleBarTextStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextSecondary}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="46"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFD3D3D3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BrushError}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource BrushWindowBackground}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextPrimary}"/>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextPrimary}"/>
        <Setter Property="Height" Value="30"/>
    </Style>


    <Style x:Key="SubmenuMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="#F0F0F0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="HeaderHost"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#D3D3D3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SubmenuMenuItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Header"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center"/>
                        </Border>

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Focusable="false"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=Border}"
                               PopupAnimation="Fade">

                            <Border x:Name="SubmenuBorder"
                                    Background="#F0F0F0"
                                    BorderBrush="#A0A0A0"
                                    BorderThickness="1"
                                    Padding="2">
                                <ScrollViewer CanContentScroll="True" MaxHeight="400">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    Grid.IsSharedSizeScope="true"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#D3D3D3"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="4,5"/>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFE0E0E0"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextPrimary}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BrushControlHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BrushControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource BrushControlBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="CaretBrush" Value="{StaticResource BrushTextPrimary}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource BrushAccent}"/>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource BrushWindowBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BrushTextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0,0,0,2" Margin="0,0,-1,0">
                            <ContentPresenter x:Name="content" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BrushAccent}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BrushControlHover}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BrushAccent}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BrushAccent}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource BrushTextSecondary}"/>
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>